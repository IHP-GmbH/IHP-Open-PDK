# frozen_string_literal: true

#=========================================================================================
# Copyright 2025 IHP PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#=========================================================================================

if BEOL
  #==============================================
  #----------------- 5.21. TopVia1 --------------
  #==============================================

  logger.info('Starting 5.21. TopVia1 table')

  # TopVia1 derivations
  topvia1_nseal = topvia1_drw.not(edgeseal_drw)

  # Rule TV1.a: Min. and max. TopVia1 width is 0.42µm
  logger.info('Executing rule TV1.a')
  tv1_a_value = drc_rules["TV1_a"].to_f
  tv1a_l1 = topvia1_nseal.without_bbox_min(tv1_a_value.um)
  tv1a_l2 = topvia1_nseal.without_bbox_max(tv1_a_value.um)
  tv1a_l = tv1a_l1.join(tv1a_l2)
  tv1a_l.output('TV1.a', "5.21. TV1.a : Min. and max. TopVia1 width: #{tv1_a_value} µm")
  tv1a_l1.forget
  tv1a_l2.forget
  tv1a_l.forget

  # Rule TV1.b: Min. TopVia1 space is 0.42µm
  logger.info('Executing rule TV1.b')
  tv1_b_value =  drc_rules["TV1_b"].to_f
  tv1b_l1 = topvia1_nseal.space(tv1_b_value.um, euclidian)
  tv1b_l1.output('TV1.b', "5.21. TV1.b : Min. TopVia1 space: #{tv1_b_value} µm")
  tv1b_l1.forget

end
