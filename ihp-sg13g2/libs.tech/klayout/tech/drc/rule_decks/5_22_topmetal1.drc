# frozen_string_literal: true

#=========================================================================================
# Copyright 2025 IHP PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#=========================================================================================

if BEOL
  #===============================================
  #--------------- 5.22. TopMetal1 ---------------
  #===============================================

  logger.info('Starting 5.22. TopMetal1 table')

  # TopMetal1 derivations

  # Rule TM1.a: Min. TopMetal1 width is 1.64µm
  logger.info('Executing rule TM1.a')
  tm1_a_value = drc_rules["TM1_a"].to_f
  tm1a_l1 = topmetal1_drw.width(tm1_a_value.um, euclidian)
  tm1a_l1.output('TM1.a', "5.22. TM1.a: Min. TopMetal1 width: #{tm1_a_value} μm.")
  tm1a_l1.forget

  # Rule TM1.b: Min. TopMetal1 space or notch is 1.64µm
  logger.info('Executing rule TM1.b')
  tm1_b_value = drc_rules["TM1_b"].to_f
  tm1b_l1 = topmetal1_drw.space(tm1_b_value.um, euclidian)
  tm1b_l1.output('TM1.b', "5.22. TM1.b: Min. TopMetal1 space or notch: #{tm1_b_value} μm.")
  tm1b_l1.forget
end
