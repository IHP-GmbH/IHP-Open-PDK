# frozen_string_literal: true

#=========================================================================================
# Copyright 2025 IHP PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#=========================================================================================
if FEOL
  #================================================
  #------------------ 5.3 nBuLay ------------------
  #================================================

  logger.info('Starting 5.3 nBuLay table')

  if !PRECHECK_DRC && CONNECTIVITY_RULES
    # nBulay derivations
    nbl_nets = nbulay_drw.nets
    nactiv_nets = nactiv.nets
    pactiv_nets = pactiv.nets

    # Rule NBL.b: Min. nBuLay space or notch (same net) is 1.50 um
    logger.info('Executing rule NBL.b')
    nbl_b_value = drc_rules['NBL_b'].to_f
    nbl_b = nbl_nets.space(nbl_b_value.um, props_eq)
    nbl_b.output('NBL.b', "5.3.NBL.b : Min. nBuLay space or notch (same net) is #{nbl_b_value} um")
    nbl_b.forget

    # Rule NBL.c: Min. PWell width between nBuLay regions (different net) is 3.20 um
    logger.info('Executing rule NBL.c')
    nbl_c_value = drc_rules['NBL_c'].to_f
    nbl_c_l1 = nbl_nets.space(nbl_c_value.um, props_ne)
    nbl_c_l2 = pwell_block.interacting(nbulay_drw)
    nbl_c_l3 = nbl_c_l2.sep(nbulay_drw, nbl_c_value.um, euclidian, without_touching_edges)
    nbl_c = nbl_c_l1.join(nbl_c_l3)
    nbl_c.output('NBL.c', "5.3.NBL.c : Min. PWell width between nBuLay regions (different net) is #{nbl_c_value} um")
    nbl_c_l1.forget
    nbl_c_l2.forget
    nbl_c_l3.forget
    nbl_c.forget

    # Rule NBL.d: Min. PWell width between nBuLay and NWell (different net) is 2.20 um
    logger.info('Executing rule NBL.d')
    nbl_d_value = drc_rules['NBL_d'].to_f
    nbl_d_l1 = nbl_nets.sep(nwell_nets, nbl_d_value.um, props_ne)
    nbl_d_l2 = pwell_block.interacting(nwell_drw)
    nbl_d_l3 = nbl_d_l2.sep(nbulay_drw, nbl_d_value.um, euclidian, without_touching_edges)
    nbl_d = nbl_d_l1.join(nbl_d_l3)
    nbl_d.output('NBL.d',
                 "5.3.NBL.d : Min. PWell width between nBuLay and NWell (different net) is #{nbl_d_value} um")
    nbl_d_l1.forget
    nbl_d_l2.forget
    nbl_d_l3.forget
    nbl_d.forget

    # Rule NBL.e: Min. nBuLay space to unrelated N+Activ is 1.00 um
    logger.info('Executing rule NBL.e')
    nbl_e_value = drc_rules['NBL_e'].to_f
    nbl_e = nbl_nets.sep(nactiv_nets, nbl_e_value.um, props_ne)
    nbl_e.output('NBL.e', "5.3.NBL.e : Min. nBuLay space to unrelated N+Activ is #{nbl_e_value} um")
    nbl_e.forget

    # Rule NBL.f: Min. nBuLay space to unrelated P+Activ is 0.50 um
    logger.info('Executing rule NBL.f')
    nbl_f_value = drc_rules['NBL_f'].to_f
    nbl_f = nbl_nets.sep(pactiv_nets, nbl_f_value.um, props_ne)
    nbl_f.output('NBL.f', "5.3.NBL.f : Min. nBuLay space to unrelated P+Activ is #{nbl_f_value} um")
    nbl_f.forget
  end
end
