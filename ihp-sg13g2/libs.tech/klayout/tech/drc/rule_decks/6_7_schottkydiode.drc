# frozen_string_literal: true

#=========================================================================================
# Copyright 2025 IHP PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#=========================================================================================

if FEOL
  #================================================
  #------------------ 6.7 Schottky diode ----------
  #================================================

  logger.info('Starting 6.7 Schottky diode table')

  unless PRECHECK_DRC
    # Schottky diode derivations
    contbar_nbulay = contbar.and(nbulay_drw)

    # Rule Sdiod.d: Min. and max. ContBar width inside nBuLay is 0.30 um
    logger.info('Executing rule Sdiod.d')
    sdiod_d_value = drc_rules['Sdiod_d'].to_f
    sdiod_d_l = contbar_nbulay.without_bbox_min(sdiod_d_value.um)
    sdiod_d_l.output('Sdiod.d', "6.7. Sdiod.d : Min. and max. ContBar width inside nBuLay is #{sdiod_d_value} um")
    sdiod_d_l.forget

    # Rule Sdiod.e: Min. and max. ContBar length inside nBuLay is 1.00 um
    logger.info('Executing rule Sdiod.e')
    sdiod_e_value = drc_rules['Sdiod_e'].to_f
    sdiod_e_l = contbar_nbulay.without_bbox_max(sdiod_e_value.um)
    sdiod_e_l.output('Sdiod.e', "6.7. Sdiod.e : Min. and max. ContBar length inside nBuLay is #{sdiod_e_value} um")
    sdiod_e_l.forget
  end
end
