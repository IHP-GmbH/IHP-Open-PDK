# frozen_string_literal: true

#=========================================================================================
# Copyright 2025 IHP PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#=========================================================================================

if BEOL
  #================================================
  #------------------- 9.1. LBE -------------------
  #================================================

  logger.info('Starting 9.1. LBE table')

  # LBE derivations
  lbe_in_seal = lbe_drw.inside(edgeseal_drw.holes)

  # Rule LBE.a: Min. LBE width is 100.00µm
  logger.info('Executing rule LBE.a')
  lbe_a_value = drc_rules['LBE_a'].to_f
  lbea_l1 = lbe_drw.width(lbe_a_value.um, euclidian)
  lbea_l1.output('LBE.a', "9.1. LBE.a: Min. LBE width: #{lbe_a_value} µm")
  lbea_l1.forget

  # Rule LBE.b: Max. LBE width is 1500µm.
  logger.info('Executing rule LBE.b')
  lbe_b_value = drc_rules['LBE_b'].to_f
  lbeb_l1 = lbe_drw.with_bbox_max(lbe_b_value.um + 0.001.um, nil)
  lbeb_l1.output('LBE.b', "9.1. LBE.b: Max. LBE width: #{lbe_b_value} µm.")
  lbeb_l1.forget

  # Rule LBE.b1:  Max. LBE area (µm²) is 250000.
  logger.info('Executing rule LBE.b1')
  lbe_b1_value = drc_rules['LBE_b1'].to_f
  lbeb1_l1 = lbe_drw.with_area(lbe_b1_value.um + 0.001.um, nil)
  lbeb1_l1.output('LBE.b1', "9.1. LBE.b1: Max. LBE area (µm²): #{lbe_b1_value} .um")
  lbeb1_l1.forget

  # Rule LBE.c: Min. LBE space or notch is 100.00µm
  logger.info('Executing rule LBE.c')
  lbe_c_value = drc_rules['LBE_c'].to_f
  lbec_l1 = lbe_drw.space(lbe_c_value.um, euclidian)
  lbec_l1.output('LBE.c', "9.1. LBE.c: Min. LBE space or notch: #{lbe_c_value} µm")
  lbec_l1.forget

  # Rule LBE.d: Min. LBE space to inner edge of EdgeSeal is 150.00µm
  logger.info('Executing rule LBE.d')
  lbe_d_value = drc_rules['LBE_d'].to_f
  lbed_l1 = lbe_in_seal.sep(edgeseal_drw, lbe_d_value.um, euclidian)
  lbed_l1.output('LBE.d', "9.1. LBE.d: Min. LBE space to inner edge of EdgeSeal: #{lbe_d_value} µm")
  lbed_l1.forget

  # Rule LBE.h: No LBE ring allowed.
  logger.info('Executing rule LBE.h')
  lbeh_l1 = lbe_drw.interacting(lbe_drw.holes)
  lbeh_l1.output('LBE.h', '9.1. LBE.h: No LBE ring allowed.')
  lbeh_l1.forget

end
